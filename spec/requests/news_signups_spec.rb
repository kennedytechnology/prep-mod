 require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/public/news_signups", type: :request do
  # NewsSignup. As you add validations to NewsSignup, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {
    {first_name: Faker::Name.first_name,
    last_name: Faker::Name.first_name, 
    email: Faker::Internet.email,
    date_of_birth: Faker::Date.birthday,
    zip_code: Faker::Address.zip_code,
    topics: NEWS_TOPICS,
    occupation: PATIENT_OCCUPATIONS.sample,
    chronic_health_condition: Faker::Boolean.boolean}
  }

  let(:invalid_attributes) {
    {first_name: "",
      last_name: "",
      email: "",
      date_of_birth: Faker::Date.birthday,
      zip_code: Faker::Address.zip_code,
      topics: NEWS_TOPICS,
      occupation: PATIENT_OCCUPATIONS.sample,
      chronic_health_condition: Faker::Boolean.boolean}
  }

  describe "GET /new" do
    it "renders a successful response" do
      get new_public_news_signup_url
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new NewsSignup" do
        expect {
          post public_news_signups_url, params: { news_signup: valid_attributes }
        }.to change(NewsSignup, :count).by(1)
      end

      it "redirects to the created news_signup" do
        post public_news_signups_url, params: { news_signup: valid_attributes }
        expect(response).to redirect_to(root_url)
      end
    end

    context "with invalid parameters" do
      it "does not create a new NewsSignup" do
        expect {
          post public_news_signups_url, params: { news_signup: invalid_attributes }
        }.to change(NewsSignup, :count).by(0)
      end

      it "renders a successful response (i.e. to display the 'new' template)" do
        post public_news_signups_url, params: { news_signup: invalid_attributes }
        expect(response).to be_successful
      end
    end
  end

end
