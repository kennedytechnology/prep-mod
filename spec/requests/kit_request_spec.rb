 require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/kit", type: :request do
  let(:clinic) { create(:clinic) }

  let(:valid_attributes) {
    {
      first_name: Faker::Name.first_name,
      last_name: Faker::Name.last_name,
      middle_initial: ("A".."Z").to_a.sample,
      email: "new_kit@example.com",
      date_of_birth: Faker::Date.birthday,
      address: "3440 Brookhaven Road",
      city: "Pasadena",
      state: "MD",
      zip_code: 21122,
      county: COUNTIES.sample,
      phone_number: Faker::PhoneNumber.cell_phone,
    }
  }

  let(:invalid_attributes) {
    {
      first_name: "",
      last_name: "",
      middle_initial: ("A".."Z").to_a.sample,
      email: "new_kit@example.com",
      date_of_birth: Faker::Date.birthday,
      address: "3440 Brookhaven Road",
      city: "Pasadena",
      state: "MD",
      zip_code: 21122,
      county: COUNTIES.sample,
      phone_number: Faker::PhoneNumber.cell_phone,
    }
  }

  describe "GET /new" do
    it "renders a successful response" do
      get "/kit/new"
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new kit(patient)" do
        expect {
          post "/kit/create", params: { patient: valid_attributes }
        }.to change(Patient, :count).by(1)
      end

      it "redirects to root" do
        post "/kit/create", params: { patient: valid_attributes }
        expect(response).to redirect_to(root_url)
      end
    end

    context "with invalid parameters" do
      pending "does not create a new kit(patient)" do
        expect {
          post "/kit/create", params: { patient: invalid_attributes }
        }.to change(Patient, :count).by(0)
      end

      pending "renders a successful response (i.e. to display the 'new' template)" do
        post "/kit/create", params: { patient: invalid_attributes }
        expect(response).to be_successful
      end
    end
  end

end
